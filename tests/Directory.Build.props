<Project>
  <!--
    I wanted this file to be merged with the Directory.Build.props at the root of the repo.
    To do this I've followed the example presented here https://stackoverflow.com/questions/45974279/multi-level-merging-of-msbuild-directory-build-props-files
    which comes from this GitHub issue https://github.com/dotnet/msbuild/issues/2456
  -->
  <PropertyGroup>
    <ParentDirectoryBuildPropsPath>$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)..\'))</ParentDirectoryBuildPropsPath>
    <ParentDirectoryBuildPropsPath>$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)..\'))</ParentDirectoryBuildPropsPath>
  </PropertyGroup>
  <ImportGroup>
    <Import Project="$(ParentDirectoryBuildPropsPath)" />
  </ImportGroup>
  <!--
    Idea taken from https://blog.jetbrains.com/dotnet/2021/11/18/global-usings-in-csharp-10/.
    Declare a GlobalUsings.Tests.cs in the one place and use it for all tests.
  -->
  <ItemGroup>
    <Compile Include="$(SolutionDir)\src\GitHubIssuesParserCli\GlobalUsings.cs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="coverlet.msbuild" Version="3.1.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="NSubstitute" Version="4.3.0" />
    <PackageReference Include="Shouldly" Version="4.0.3" />
    <PackageReference Include="xunit.analyzers" Version="0.10.0" />
    <PackageReference Include="NSubstitute.Analyzers.CSharp" Version="1.0.15" />
    <PackageReference Include="GitHubActionsTestLogger" Version="1.3.0" />
    <PackageReference Include="LiquidTestReports.Custom" Version="1.0.9" />
  </ItemGroup>
</Project>
